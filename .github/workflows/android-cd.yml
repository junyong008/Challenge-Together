name: Android CD

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

on:
  pull_request:
    branches: [ "release" ]

jobs:
  cd-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: Generate challenge_together.jks
        run: echo '${{ secrets.CHALLENGE_TOGETHER_KEYSTORE }}' | base64 --d > ./app/challenge_together.jks

      - name: Generate keystore.properties
        run: echo '${{ secrets.KEYSTORE_PROPERTIES }}' >> ./keystore.properties

      - name: Generate secrets.properties
        run: echo '${{ secrets.SECRETS_PROPERTIES }}' >> ./secrets.defaults.properties

      - name: Generate google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_RELEASE }}' | base64 --d > ./app/google-services.json

      - name: Extract Version Name
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            VERSION=$(echo '${{ github.event.pull_request.title }}' | grep -oP 'release v\K[0-9]+\.[0-9]+\.[0-9]+')
          else
            VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -oP 'release v\K[0-9]+\.[0-9]+\.[0-9]+')
          fi
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
        id: extract_version

      - name: Build Release APK
        run: ./gradlew :app:assembleRelease

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: app/build/outputs/apk/release/
          if-no-files-found: error

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          name: ${{ steps.extract_version.outputs.version }}
          generate_release_notes: true
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: app/build/outputs/apk/release/app-release.apk
